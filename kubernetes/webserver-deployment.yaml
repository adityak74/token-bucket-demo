apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f ../docker-compose.yaml
    kompose.version: 1.26.1 (HEAD)
  creationTimestamp: null
  labels:
    io.kompose.service: webserver
  name: webserver
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: webserver
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f ../docker-compose.yaml
        kompose.version: 1.26.1 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.network/deployml_network: "true"
        io.kompose.service: webserver
    spec:
      containers:
        - env:
            - name: BUCKET_REFILL_INTERVAL
              valueFrom:
                configMapKeyRef:
                  key: BUCKET_REFILL_INTERVAL
                  name: env
            - name: BUCKET_REFILL_SIZE
              valueFrom:
                configMapKeyRef:
                  key: BUCKET_REFILL_SIZE
                  name: env
            - name: BUCKET_SIZE
              valueFrom:
                configMapKeyRef:
                  key: BUCKET_SIZE
                  name: env
            - name: CRITICAL_BUCKET
              valueFrom:
                configMapKeyRef:
                  key: CRITICAL_BUCKET
                  name: env
            - name: LOAD_SHEDDING
              valueFrom:
                configMapKeyRef:
                  key: LOAD_SHEDDING
                  name: env
            - name: REDIS_HOST
              valueFrom:
                configMapKeyRef:
                  key: REDIS_HOST
                  name: env
            - name: REDIS_PORT
              valueFrom:
                configMapKeyRef:
                  key: REDIS_PORT
                  name: env
          image: token-bucket-webserver
          name: webserver
          ports:
            - containerPort: 80
          resources: {}
          volumeMounts:
            - mountPath: /code
              name: webserver-claim0
          imagePullPolicy: Never
      restartPolicy: Always
      volumes:
        - name: webserver-claim0
          persistentVolumeClaim:
            claimName: webserver-claim0
status: {}
